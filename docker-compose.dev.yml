services:
  traefik:
    ports:
    - "12080:80"
    - "12443:443"
    networks:
      development:
    volumes:
      # Mount the Docker socket as read-only so Traefik can listen to events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.infrastructure/conf/traefik/dev/traefik.yml:/traefik.yml:ro
      - ./.infrastructure/conf/traefik/dev/traefik-certs.yml:/traefik-certs.yml
      - ./.infrastructure/conf/traefik/dev/certificates/:/certificates

  php:
    build:
      context: .
      dockerfile: Dockerfile

      target: development
      args:
        USER_ID: ${SPIN_USER_ID}
        GROUP_ID: ${SPIN_GROUP_ID}
    volumes:
      - .:/var/www/html/
    networks:
      - development
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laravel.rule=HostRegexp(`localhost`)"
      - "traefik.http.routers.laravel.entrypoints=web"
      - "traefik.http.services.laravel.loadbalancer.server.port=8080"
      - "traefik.http.services.laravel.loadbalancer.server.scheme=http"

  db:
    image: "mysql:5.7.22"
    platform: linux/x86_64
    container_name: DB
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    tty: true
    ports:
      - 13306:3306
    volumes:
      - ./db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: project
      MYSQL_USER: prene
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - development
    healthcheck:
      test: out=$$(mysqladmin ping -h localhost -P 3306 -u root --password=123456 2>&1); echo $$out | grep 'mysqld is alive' || { echo $$out; exit 1; }
      interval: 15s
      timeout: 10s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - db
    ports:
      - 11080:80
    environment:
      PMA_HOST: db
      PMA_USER: prene
      PMA_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
      UPLOAD_LIMIT: 300M
    networks:
      - development

  node:
    image: node:20
    volumes:
      - .:/usr/src/app/
    working_dir: /usr/src/app/
    networks: 
      - development

  mailpit:
      image: axllent/mailpit
      networks:
        - development
      ports:
        - "8025:8025"

networks:
  development: